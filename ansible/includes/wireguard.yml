---

- name: "Wireguard installation and setup"
  hosts: localhost
  connection: local
  vars:
    config_file: '/root/config.ini'
    wireguard_docker_image: "embarkstudios/wireguard-ui:latest"
  tasks:
    - name: Check if config file exists
      stat:
        path: "{{ config_file }}"
      register: config_file_exists

    - name: stop play if config file doesn't exist
      meta: end_play
      when: not config_file_exists.stat.exists

    - name: Setting digital ocean facts
      set_fact:
        digitalocean_host: "{{ lookup('ini', 'host section=digitalocean file={{ config_file }}') }}"
        digitalocean_token: "{{ lookup('ini', 'token section=digitalocean file={{ config_file }}') }}"
        digitalocean_domain: "{{ lookup('ini', 'domain section=digitalocean file={{ config_file }}') }}"

    - name: stop play if config options do not exist
      meta: end_play
      when: digitalocean_host | length == 0 or digitalocean_domain | length == 0 or  digitalocean_token | length == 0

    - name: enable IP forwarding
      sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        sysctl_set: true
        state: present
        reload: true

    - name: create wireguard required folder
      file:
        state: directory
        path: "/opt/wireguard"

    - name: Deploy wireguard container
      docker_container:
        name: "wireguard"
        hostname: "wireguard"
        image: "{{ wireguard_docker_image }}"
        env:
          TZ: 'America/Toronto'
          WIREGUARD_UI_LISTEN_ADDRESS: ":8080"
          WIREGUARD_UI_DATA_DIR: "/data"
          WIREGUARD_UI_WG_ENDPOINT: "vpn.{{ digitalocean_domain }}:51820"
          WIREGUARD_UI_CLIENT_IP_RANGE: "10.6.0.1/24"
          WIREGUARD_UI_WG_DNS: "{{ ansible_default_ipv4.address }}"
          WIREGUARD_UI_NAT: "true"
          WIREGUARD_UI_NAT_DEVICE: "{{ ansible_default_ipv4.interface }}"
          # WIREGUARD_UI_WG_DEVICE_NAME=wg0
        ports:
          - "51820:51820/udp"
        networks:
          - name: "app_network"
        restart_policy: always
        privileged: true
        state: started
        pull: false
        volumes:
          - '/opt/wireguard/:/data/'
      # added retry to tasks dependant on external services
      register: result
      retries: 5
      delay: 3
      until: result is succeeded
      when:
        - not ansible_check_mode
