---

- name: Read ini config file
  import_playbook: "read_config_file.yml"

- name: "Traefik Install and setup"
  hosts: localhost
  connection: local
  vars:
    traefik_docker_image: "docker.io/traefik:v3.2.3"
  tasks:
    - name: create traefik required folders
      file:
        state: directory
        path: "/opt/traefik/"
        mode: 0640

    - name: Deploy traefik container
      docker_container:
        name: "traefik"
        hostname: "traefik"
        image: "{{ traefik_docker_image }}"
        env:
          TZ: 'America/Toronto'
          DO_AUTH_TOKEN: "{{ do_token }}"
        ports:
          - 80:80
          - 443:443
        networks:
          - name: "app_network"
        command:
          - --global.sendanonymoususage=false
          - --entryPoints.http.address=:80
          - --entryPoints.https.address=:443
          - --api=true
          - --api.dashboard=true
          - --api.debug=true
          - --log.level=INFO
          - --providers.docker=true
          - --providers.docker.endpoint=unix:///var/run/docker.sock
          - --providers.docker.watch
          - --providers.docker.exposedbydefault=false
          - --providers.docker.network=app_network
          - --certificatesResolvers.le.acme.dnsChallenge.provider=digitalocean
          - --certificatesResolvers.le.acme.dnsChallenge.delayBeforeCheck=5
          - --certificatesResolvers.le.acme.storage=/opt/traefik/acme.json
          - --certificatesResolvers.le.acme.dnsChallenge.resolvers=1.1.1.1:53,8.8.8.8:53
        labels:
          traefik.enable: "true"
          traefik.docker.network: "app_network"
          traefik.http.routers.dashboard.rule: "Host(`traefik.{{ do_domain }}`)"
          traefik.http.routers.dashboard.service: "api@internal"
          traefik.http.routers.dashboard.entrypoints: "https"
          traefik.http.routers.dashboard.tls: "true"
          traefik.http.services.api-svc.loadbalancer.server.port: "9999"
          traefik.http.routers.http-catchall.rule: "hostregexp(`{host:.+}`)"
          traefik.http.routers.http-catchall.entrypoints: "http"
          traefik.http.routers.http-catchall.middlewares: "redirect-to-https"
          traefik.http.middlewares.redirect-to-https.redirectscheme.scheme: "https"
          traefik.http.routers.wildcard-certs.tls.certresolver: "le"
          traefik.http.routers.wildcard-certs.tls.domains[0].main: "{{ do_domain }}"
          traefik.http.routers.wildcard-certs.tls.domains[0].sans: "{{ do_host }}.{{ do_domain }}"
        restart_policy: always
        state: started
        pull: false
        memory: '200M'
        volumes:
          - /opt/traefik/:/opt/traefik/
          - /var/run/docker.sock:/var/run/docker.sock:ro
          - /etc/timezone:/etc/timezone:ro
          - /etc/localtime:/etc/localtime:ro
        network_mode: "default"
        container_default_behavior: "compatibility"
      # added retry to tasks dependant on external services
      register: result
      retries: 5
      delay: 3
      until: result is succeeded
