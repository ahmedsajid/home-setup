---

- name: "Pihole Install and setup"
  hosts: localhost
  connection: local
  vars:
    pihole_docker_image: "pihole/pihole:2022.09.4"
    pihole_exporter_docker_image: "ekofr/pihole-exporter:v0.0.11"
    custom_ad_list: |
      https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts
      https://raw.githubusercontent.com/ahmedsajid/pihole/master/adlist.txt
      https://raw.githubusercontent.com/ahmedsajid/pihole/master/sunburst.txt
      https://raw.githubusercontent.com/ahmedsajid/pihole/master/youtube1.txt
      https://raw.githubusercontent.com/ahmedsajid/pihole/master/youtube2.txt
    unbound_role_version: v2.1.3
    service_list:
      - jellyfin
      - pihole
      - speedtest
      - vpn
      - syncthing
      - prometheus
      - grafana
      - webui-aria
    config_file: '/root/config.ini'
  tasks:
    - name: Check if config file exists
      stat:
        path: "{{ config_file }}"
      register: config_file_exists

    - name: stop play if config file doesn't exist
      meta: end_play
      when: not config_file_exists.stat.exists

    - name: Setting digital ocean facts
      set_fact:
        digitalocean_host: "{{ lookup('ini', 'host section=digitalocean file={{ config_file }}') }}"
        digitalocean_token: "{{ lookup('ini', 'token section=digitalocean file={{ config_file }}') }}"
        digitalocean_domain: "{{ lookup('ini', 'domain section=digitalocean file={{ config_file }}') }}"

    - name: stop play if config options do not exist
      meta: end_play
      when: digitalocean_host | length == 0 or digitalocean_domain | length == 0 or  digitalocean_token | length == 0

    - name: create role folder
      file:
        state: directory
        path: /root/.ansible/roles

    - name: Clone role ahmedsajid.unbound
      git:
        repo: 'https://github.com/ahmedsajid/ansible-role-unbound.git'
        dest: /root/.ansible/roles/ahmedsajid.unbound
        version: "{{ unbound_role_version }}"
      # added retry to tasks dependant on external services
      register: result
      retries: 5
      delay: 3
      until: result is succeeded

    - name: Using unbound role
      include_role:
        name: ahmedsajid.unbound
      vars:
        unbound_interfaces:
          - 127.0.0.1@5353
          - "{{ ansible_default_ipv4.address }}@5353"
        unbound_access_control:
          - 127.0.0.1 allow
          - 172.16.0.0/12 allow
          - 192.168.0.0/16 allow
        unbound_forward_zone_configuration:
          - forward-tls-upstream: "yes"
        unbound_configuration:
          - verbosity: 1
          - do-ip4: "yes"
          - do-ip6: "no"
          - do-udp: "yes"
          - do-tcp: "yes"
          - num-threads: 1
          - pidfile: "/var/run/unbound.pid"
          - logfile: "{{unbound_logfile}}"
          - log-time-ascii: "yes"
          - log-queries: "yes"
          - log-replies: "yes"
          - log-tag-queryreply: "yes"
          - log-local-actions: "yes"
          - log-servfail: "yes"
      when: not ansible_check_mode

    - name: create pihole required folders
      file:
        state: directory
        path: "{{ item }}"
      with_items:
        - "/opt/pihole/etc"
        - "/opt/pihole/dnsmasq.d/"

    - name: Deploy pihole custom adlist
      copy:
        dest: "/opt/pihole/etc/adlists.list"
        content: "{{ custom_ad_list }}"
        mode: 0640
        owner: 999
        group: 999

    - name: Deploy custom dns entries
      copy:
        dest: "/opt/pihole/etc/custom.list"
        content: |
          {{ ansible_default_ipv4.address }} {% for service in service_list %}{{ service }}.{{ digitalocean_domain }}{% if not loop.last %} {% endif %}{% endfor %}
        mode: 0640
        owner: 999
        group: 999

    - name: Deploy pihole container
      docker_container:
        name: "pihole"
        hostname: "pihole"
        image: "{{ pihole_docker_image }}"
        env:
          TZ: 'America/Toronto'
          PIHOLE_DNS_: "{{ ansible_default_ipv4.address }}#5353"
          WEBPASSWORD: ''
          DNSMASQ_LISTENING: "all"
        ports:
          - "53:53/tcp"
          - "53:53/udp"
        networks:
          - name: "app_network"
        restart_policy: always
        state: started
        pull: false
        volumes:
          - '/opt/pihole/etc/:/etc/pihole/'
          - '/opt/pihole/dnsmasq.d/:/etc/dnsmasq.d/'
      # added retry to tasks dependant on external services
      register: result
      retries: 5
      delay: 3
      until: result is succeeded
      when: not ansible_check_mode

    - name: Deploy pihole exporter
      docker_container:
        name: "pihole-exporter"
        hostname: "pihole-exporter"
        image: "{{ pihole_exporter_docker_image }}"
        env:
          TZ: 'America/Toronto'
          PIHOLE_HOSTNAME: "{{ ansible_default_ipv4.address }}"
          PIHOLE_PASSWORD: ''
          INTERVAL: '30s'
          PORT: '9617'
        ports:
          - '9617:9617'
        networks:
          - name: "app_network"
        restart_policy: always
        state: started
        pull: false
      # added retry to tasks dependant on external services
      register: result
      retries: 5
      delay: 3
      until: result is succeeded
      when: not ansible_check_mode

    - name: Set facts for time
      set_fact:
        minute_now: "{{ ansible_date_time.minute | int }}"

    - name: Print ansible_date_time
      debug:
        msg:
          - "{{ minute_now }}"

    - name: Update pihole gravity
      command: docker exec -t pihole pihole -g
      when: minute_now | int < 10 or
            (force_gravity_update is defined and force_gravity_update)
